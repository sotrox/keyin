_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[28],{Fzdm:function(n,e,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/word",function(){return t("x+ar")}])},"dfI+":function(n,e,t){"use strict";function r(n){var e=[];return n?(e.push(n),e):e}function u(n,e){var t=n,r=e,u=[];return t.length-r.length!=0?(u.push(t.substr(0,t.length-r.length)),u):u}function l(n){var e=[];for(var t in n)for(var r in n[t]){var u=n[t][r];e.push([u.toString(),u.name])}return e}function o(n,e){var t=[];return n&&e&&n!==e?(t.push(e),t):t}t.d(e,"a",(function(){return r})),t.d(e,"c",(function(){return u})),t.d(e,"b",(function(){return l})),t.d(e,"d",(function(){return o}))},"x+ar":function(n,e,t){"use strict";t.r(e);var r=t("q1tI"),u=t.n(r),l=t("h9Ui"),o=t("SiIT"),i=t("ILBS"),a=t("dfI+"),c=u.a.createElement;e.default=function(){var n=Object(r.useState)(""),e=n[0],t=n[1],u=l.tonalLemmatizationAnalyzer,f=Object(l.graphAnalyzeTonal)(e).map((function(n){return n.letter&&n.letter.literal})),m=Object(a.b)(u.morphAnalyze(e,new i.TonalUncombiningForms([])).map((function(n){return n.sounds}))),s=u.morphAnalyze(e,new i.TonalUncombiningForms([])).map((function(n){return n.sounds})).map((function(n){if(o.freeToneLettersTonal.includes(n[n.length-1].toString()))return n[n.length-1].toString()})),p=u.morphAnalyze(e,new i.TonalUncombiningForms([])).map((function(n){return n.sounds})).map((function(n){return n[n.length-1].name!==l.TonalSoundTags.checkedTone&&n[n.length-1].name!==l.TonalSoundTags.freeTone||n.pop(),n.map((function(n){return n.toString()})).join("")})),g=u.morphAnalyze(e,new i.TonalUncombiningForms([])).map((function(n){return n.getForms().map((function(n){return n.literal})).join(", ")})).filter((function(n){return n.length>0})),d=Object(l.lemmatize)(e),b=Object(a.c)(d.word.literal,d.getInflectionalEnding()),h=Object(a.a)(d.getInflectionalEnding()),w=d.getLemmas().map((function(n){return n.literal})),T=Object(l.inflectDesinence)(e).getForms().map((function(n){return n.literal}));return c("div",null,"\u62cd\u7f85\u99ac\u5b57, \u8f38\u51fa lemmas, stem, inflectional suffix, proceeding forms, sound sequences, uncombining form sequences, \u7532 letters",c("label",null,c("br",null),c("input",{type:"text",value:e,onChange:function(n){t(n.target.value)}})),c("br",null),"lemmas",w.map((function(n){return c("li",null,n)})),c("br",null),"stem",b.map((function(n){return c("li",null,n)})),c("br",null),"inflectional suffix",h.map((function(n){return c("li",null,n)})),c("br",null),"proceeding forms",T.map((function(n){return c("li",null,n)})),c("br",null),"sound sequences",m.map((function(n){return c("li",null,n[0]+" - "+n[1])})),c("br",null),"transfix: ",s.join("-"),c("br",null),"without transfix: ",p.join("-"),c("br",null),"uncombining form sequences",g.map((function(n){return c("li",null,n)})),c("br",null),"letters: ",f.join(", "))}}},[["Fzdm",0,1,2]]]);