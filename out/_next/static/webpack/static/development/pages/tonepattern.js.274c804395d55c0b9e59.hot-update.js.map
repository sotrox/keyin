{"version":3,"file":"static/webpack/static/development/pages/tonepattern.js.274c804395d55c0b9e59.hot-update.js","sources":["webpack:///./pages/tonepattern.tsx"],"sourcesContent":["import { useState } from 'react';\nimport { TonalInflectionAnalyzer, TonalCombiningForms, TonalLetterTags } from 'taipa';\n\nfunction TonePatternPage() {\n    const [input, setInput] = useState('');\n\n    const handleChange = function(e: React.ChangeEvent<HTMLInputElement>) {\n        setInput(e.target.value);\n    };\n\n    const mapTonal = new Map<string, number>()\n        .set(TonalLetterTags.f, 1)\n        .set(TonalLetterTags.y, 2)\n        .set(TonalLetterTags.w, 3)\n        .set(TonalLetterTags.x, 5)\n        .set(TonalLetterTags.z, 7);\n    // .set(TonalLetterTags.xx, 9);\n\n    const mapFinal = new Map<string, number>()\n        .set(TonalLetterTags.zero, 1)\n        .set(TonalLetterTags.p, 4)\n        .set(TonalLetterTags.t, 4)\n        .set(TonalLetterTags.k, 4)\n        .set(TonalLetterTags.h, 4)\n        .set(TonalLetterTags.pp, 8)\n        .set(TonalLetterTags.tt, 8)\n        .set(TonalLetterTags.kk, 8)\n        .set(TonalLetterTags.hh, 8);\n\n    const tia = new TonalInflectionAnalyzer();\n    const ms1 = tia.morphAnalyze(input, new TonalCombiningForms());\n    const items = ms1.map(it =>\n        mapTonal.has(it.allomorph.tonal.toString())\n            ? mapTonal.get(it.allomorph.tonal.toString())\n            : mapFinal.get(it.allomorph.toString())\n    );\n\n    const nouns = ['engzhiongx', 'pannypannyqiurw', 'angfangwangx', 'siurfsiurzsiur', 'liyleyqiurw'];\n\n    return (\n        <div>\n            <label>\n                拍羅馬字, 輸出聲調模式\n                <br />\n                <input type=\"text\" list=\"items\" onChange={handleChange} />\n            </label>\n            <datalist id=\"items\">\n                {nouns.map(item => (\n                    <option key={item} value={item} />\n                ))}\n            </datalist>\n            {items}\n        </div>\n    );\n}\n\nexport default TonePatternPage;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAOA;AAWA;AACA;AACA;AAAA;AAAA;AAMA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAOA;AACA;AACA;;;;A","sourceRoot":""}